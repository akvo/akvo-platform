apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: keycloak
spec:
  replicas: 1
  template:
    metadata:
      labels:
        run: keycloak
    spec:
      containers:
      - name: keycloak-ha-mysql
        image: akvo/keycloak-ha-mysql:3.1.0.Final
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /auth/realms/master/.well-known/openid-configuration
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 1
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 10
        env:
        - name: MYSQL_PORT_3306_TCP_ADDR
          value: "127.0.0.1"
        - name: MYSQL_PORT_3306_TCP_PORT
          value: "3306"
        - name: MYSQL_DATABASE
          value: "keycloak"
        - name: MYSQL_USER
          value: "keycloak"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: mysql_password
        - name: GOOGLE_LOCATION
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: google_bucket
        - name: GOOGLE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: google_access_key
        - name: GOOGLE_ACCESS_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: google_access_key_secret
        # KEYCLOAK_USER env attempts to create a default user every time
        # - name: KEYCLOAK_USER
        #   valueFrom:
        #     secretKeyRef:
        #       name: keycloak
        #       key: keycloak_user
        # - name: KEYCLOAK_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: keycloak
        #       key: keycloak_password
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.09
        env:
        - name: MYSQL_INSTANCE
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: mysql_instance
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=$(MYSQL_INSTANCE)",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: cloudsql
            mountPath: /cloudsql
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: cloudsql
          emptyDir:
